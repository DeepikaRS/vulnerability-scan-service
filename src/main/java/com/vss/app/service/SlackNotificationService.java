package com.vss.app.service;

import com.vss.app.model.ActionDetails;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Service;

import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;

@Slf4j
@Service
public class SlackNotificationService {


    public void sendSlackNotification(ActionDetails actionDetails) {
        try {
            String webhookUrl = "https://hooks.slack.com/services/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";

            String message = "{\"text\":\"" + actionDetails.getMessage() + "\"}";

            URL url = new URL(webhookUrl);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "application/json");
            connection.setDoOutput(true);

            OutputStream outputStream = connection.getOutputStream();
            outputStream.write(message.getBytes());
            outputStream.flush();
            outputStream.close();

            int responseCode = connection.getResponseCode();
            if (responseCode == 200) {
                log.info("Slack notification sent successfully!");
            } else {
                log.error("Failed to send slack notification. Response Code: {}", responseCode);
            }

            connection.disconnect();
        } catch (Exception e) {
            log.error("Failed to send slack notification. Error message: {}", e.getMessage(), e);
        }
    }

}
